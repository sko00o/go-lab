// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package queue

// StringQueue is a queue of String.
type StringQueue struct {
	items []string
}

func NewStringQueue() *StringQueue {
	return &StringQueue{
		items: make([]string, 0),
	}
}

func (q *StringQueue) Push(item string) {
	q.items = append(q.items, item)
}

func (q *StringQueue) Pop() string {
	item := q.items[0]
	q.items = q.items[1:]
	return item
}

// IntQueue is a queue of Int.
type IntQueue struct {
	items []int
}

func NewIntQueue() *IntQueue {
	return &IntQueue{
		items: make([]int, 0),
	}
}

func (q *IntQueue) Push(item int) {
	q.items = append(q.items, item)
}

func (q *IntQueue) Pop() int {
	item := q.items[0]
	q.items = q.items[1:]
	return item
}
